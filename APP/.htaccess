
###
 # 1100CC - web application framework.
 # Copyright (C) 2024 LAB1100.
 #
 # See http://lab1100.com/1100cc/release for the latest version of 1100CC and its license.
 ##

# Do not interfere with out own location formatting
DirectorySlash Off
# Turn on the location formatting
RewriteEngine On

# Set server state to development or production (default)
#SetEnv STATE development
#SetEnv MESSAGE '[L][msg_site_maintenance]'

################################################

# Do optional host/path preprocessing
RewriteRule ^.*$ - [E=HOST:${alias:HOST:%{HTTP_HOST}|%{HTTP_HOST}},E=PATH:${alias:PATH:%{REQUEST_URI}|%{REQUEST_URI}}]

# Redirect www to clean URL, include http or http(s)
	RewriteBase /
	RewriteCond %{SERVER_PORT}s%{ENV:HOST} ^(?:443(s)|[0-9]+s)www\.(.*)$ [NC]
RewriteRule ^(.*)$ http%1://%2/$1 [R=301,L]

# Split the requested host in sections
	RewriteCond %{ENV:HOST} ^(.*?)([^\.-]+[\.-])?([^\.-]+[\.-])?([^\.-]+[\.-])?([^\.-]+[\.-])?([^\.-]+[\.-])?([^\.]+\.)([^\.]+)$
RewriteRule ^.*$ - [E=Q1:%1,E=Q2:%2,E=Q3:%3,E=Q4:%4,E=Q5:%5,E=Q6:%6,E=QTOP:%7%8]

	RewriteCond ${alias:%{ENV:Q1}%{ENV:Q2}%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:,E=SERVER_NAME_1100CC:%{ENV:Q1}%{ENV:Q2}%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP},S=6]
	RewriteCond ${alias:%{ENV:Q2}%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%{ENV:Q1},E=SERVER_NAME_1100CC:%{ENV:Q2}%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP},S=5]
	RewriteCond ${alias:%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%{ENV:Q1}%{ENV:Q2},E=SERVER_NAME_1100CC:%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP},S=4]
	RewriteCond ${alias:%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%{ENV:Q1}%{ENV:Q2}%{ENV:Q3},E=SERVER_NAME_1100CC:%{ENV:Q4}%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP},S=3]
	RewriteCond ${alias:%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%{ENV:Q1}%{ENV:Q2}%{ENV:Q3}%{ENV:Q4},E=SERVER_NAME_1100CC:%{ENV:Q5}%{ENV:Q6}%{ENV:QTOP},S=2]
	RewriteCond ${alias:%{ENV:Q6}%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%{ENV:Q1}%{ENV:Q2}%{ENV:Q3}%{ENV:Q4}%{ENV:Q5},E=SERVER_NAME_1100CC:%{ENV:Q6}%{ENV:QTOP},S=1]
	RewriteCond ${alias:%{ENV:QTOP}} !=""
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%{ENV:Q1}%{ENV:Q2}%{ENV:Q3}%{ENV:Q4}%{ENV:Q5}%{ENV:Q6},E=SERVER_NAME_1100CC:%{ENV:QTOP}]

RewriteRule ^.*$ - [E=!Q1,E=!Q2,E=!Q3,E=!Q4,E=!Q5,E=!Q6,E=!QTOP]

# Finalise by mapping through alias
RewriteRule ^.*$ - [E=SERVER_NAME_SITE_NAME:${alias:SITE_NAME:%{ENV:SERVER_NAME_1100CC}|%{ENV:SERVER_NAME_1100CC}},E=SERVER_NAME_MODIFIER:${alias:MODIFIER:%{ENV:SERVER_NAME_1100CC}}]
RewriteRule ^.*$ - [E=SITE_NAME:${alias:%{ENV:SERVER_NAME_SITE_NAME}}]

# Continue if SITE_NAME is set
	RewriteCond %{ENV:SITE_NAME} =""
RewriteRule ^.*$ - [PT,R=403]

# Determine custom section
	RewriteCond %{ENV:SERVER_NAME_SUB} ((?:cms|s[0-9])[\.-])?((?:[^\.-]+[\.-])*)$
RewriteRule ^.*$ - [E=SERVER_NAME_SUB:%1,E=SERVER_NAME_CUSTOM:%2]

# Redirect if SITE_NAME is not a directory or certificate challenge
	RewriteCond %{DOCUMENT_ROOT}/%{ENV:SITE_NAME} !-d
	RewriteCond %{ENV:PATH} !/\.well-known/acme-challenge/
	# Http or http(s)
	RewriteCond %{SERVER_PORT}s ^(?:443(s)|[0-9]+s)$
RewriteRule ^.*$ http%1://%{ENV:SERVER_NAME_SUB}%{ENV:SERVER_NAME_CUSTOM}%{ENV:SITE_NAME}%{ENV:PATH} [L,R]

################################################

# Set CMS location when the host name requests the CMS
RewriteRule ^.*$ - [E=PATH_CMS:]
	RewriteCond %{ENV:HOST} ^cms[\.-]
	RewriteCond %{ENV:PATH} ^/(?i:CMS/)?(.*)$
RewriteRule ^.*$ - [E=PATH_CMS:/CMS,E=PATH:/%1]

# Only allow access to code when it's the index
	RewriteCond %{REQUEST_FILENAME} \.php$
	RewriteCond %{REQUEST_FILENAME} !/CORE/index\.php$
	RewriteCond %{REQUEST_FILENAME} !/CORE/CMS/index\.php$
RewriteRule ^.+$ - [F,NC]

# Disallow access to SETTINGS or something PRIVATE
	RewriteCond %{REQUEST_FILENAME} /SETTINGS/ [OR]
	RewriteCond %{REQUEST_FILENAME} /PRIVATE/
RewriteRule ^.+$ - [F,NC]

# If the file or symbolic link truly exists in the relevant directories, show it!
	RewriteCond %{DOCUMENT_ROOT}##%{ENV:SITE_NAME}##%{REQUEST_FILENAME} ^(.+)##(.+)##(\1/\2|\1/CORE|\1/STORAGE/\2)/.+$
# Continue if REQUEST_FILENAME is not a file
	RewriteCond %{REQUEST_FILENAME} -f [OR]
# Continue if REQUEST_FILENAME is not a symbolic link
	RewriteCond %{REQUEST_FILENAME} -l
RewriteRule ^.+$ - [PT,L]

# If the file exists in the SITE directory, create path
# Continue if the path is not a file
	RewriteCond %{DOCUMENT_ROOT}/%{ENV:SITE_NAME}%{ENV:PATH_CMS}%{ENV:PATH} -f [OR]
# Continue if the path is not a symbolic link
	RewriteCond %{DOCUMENT_ROOT}/%{ENV:SITE_NAME}%{ENV:PATH_CMS}%{ENV:PATH} -l
RewriteRule ^(.+)$ /%{ENV:SITE_NAME}%{ENV:PATH_CMS}%{ENV:PATH} [PT,L]

# If the file exists in the CORE directory, create path
# Continue if the path is not a file
	RewriteCond %{DOCUMENT_ROOT}/CORE%{ENV:PATH_CMS}%{ENV:PATH} -f [OR]
# Continue if the path is not a symbolic link
	RewriteCond %{DOCUMENT_ROOT}/CORE%{ENV:PATH_CMS}%{ENV:PATH} -l
RewriteRule ^(.+)$ /CORE%{ENV:PATH_CMS}%{ENV:PATH} [PT,L]

# If the file exists in the SITE STORAGE directory, create path
# Continue if the path is not a file
	RewriteCond %{DOCUMENT_ROOT}/STORAGE/%{ENV:SITE_NAME}%{ENV:PATH_CMS}%{ENV:PATH} -f [OR]
# Continue if the path is not a symbolic link
	RewriteCond %{DOCUMENT_ROOT}/STORAGE/%{ENV:SITE_NAME}%{ENV:PATH_CMS}%{ENV:PATH} -l
RewriteRule ^(.+)$ /STORAGE/%{ENV:SITE_NAME}%{ENV:PATH_CMS}%{ENV:PATH} [PT,L]

# All other queries get sent to the CORE index as index.php/whatever
RewriteRule ^(.*)$ /CORE%{ENV:PATH_CMS}/index.php%{ENV:PATH} [L]

################################################

# Pass authorization headers
CGIPassAuth on

# Allow compression
AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css
AddOutputFilterByType DEFLATE application/html application/xml application/xhtml+xml application/rss+xml application/javascript application/json image/svg+xml

# Set always applicable headers
Header always set X-Content-Type-Options "nosniff"

#Header always set 1100CC_DEBUG "%{SITE_NAME}e"
